---
# Create RHEL1, RHEL2, RHEL3.  DEPLOY WEB APPLICATION
- name: Create RHEL EC2 instances and deploy a web application
  hosts: localhost
  gather_facts: no
  vars:
    instance_type: t2.medium
    key_name: wave2024-demo
    security_group: launch-wizard-2
    image_id: ami-036d52dc86a04b099  # Replace with a valid RHEL AMI ID for the region chosen
    region: us-west-1
    instances:
      - name: RHEL1
      - name: RHEL2
      - name: RHEL3

  tasks:
    - name: Launch EC2 instances
      amazon.aws.ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        region: "{{ region }}"
        group: "{{ security_group }}"
        wait: yes
        count: 1
        instance_tags:
          Name: "{{ item.name }}"
      with_items: "{{ instances }}"
      register: ec2_instances

    - name: Add the new instances to the host group named launched
      ansible.builtin.add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: launched
      with_items: "{{ ec2_instances.results | map(attribute='instances') | flatten }}"

    - name: Wait for the SSH service to come up
      ansible.builtin.wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2_instances.results | map(attribute='instances') | flatten }}"

    - name: Tag RHEL1 instance
      amazon.aws.ec2_tag:
        resource: "{{ item.id }}"
        tags:
          WebServer: "yes"
      with_items: "{{ ec2_instances.results | map(attribute='instances') | flatten }}"
      when: item.tags.Name == "RHEL1"

- name: Configure and deploy web application on RHEL1
  hosts: launched
  become: yes
  tasks:
    - name: Install Apache on RHEL1
      ansible.builtin.dnf:
        name: httpd
        state: present
      when: "'WebServer' in instance_tags"

    - name: Start and enable Apache on RHEL1
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: yes
      when: "'WebServer' in instance_tags"

    - name: Create a simple web page on RHEL1
      ansible.builtin.copy:
        dest: /var/www/html/index.html
        content: |
          <html>
          <body>
          <h1 style="color:red;">Ansible Automation Platform Deployed Web Server</h1>
          <h1 style="color:blue;">Blue wave demo!</h1>
          </body>
          </html>
      when: "'WebServer' in instance_tags"

- name: Output the web application URL
  hosts: localhost
  tasks:
    - name: Show the URL for RHEL1
      ansible.builtin.debug:
        msg: "Web Application is available at http://{{ item.public_dns_name }}"
      with_items: "{{ ec2_instances.results | map(attribute='instances') | flatten }}"
      when: item.tags.Name == "RHEL1"
